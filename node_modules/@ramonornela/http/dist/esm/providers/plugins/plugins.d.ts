import { OpaqueToken } from '@angular/core';
import { Plugin } from './plugin';
export declare const HttpPluginsToken: OpaqueToken;
export declare class Plugins {
    private plugins;
    private throwsException;
    private options;
    constructor(plugins?: Array<Plugin>);
    set(plugins: Array<Plugin>): this;
    setThrowsException(throws: boolean | Function): this;
    getThrowsExceptionPlugin(plugin: string | Plugin): boolean | Function;
    isThrowsException(plugin: string | Plugin): boolean;
    add(plugin: Plugin, priority?: number): this;
    get(name: string): Plugin | null;
    has(name: string): boolean;
    indexOf(name: string): number;
    remove(name: string): boolean;
    getAll(): Array<{
        [name: string]: Plugin;
    }>;
    forEach(fn: (plugin: Plugin, index?: number) => boolean | void): void;
    cleanOptions(): void;
    setOptions(options: Object): this;
    runEvent(event: string, params: Array<any>): void;
}
