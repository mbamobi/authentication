import { NgModule, SkipSelf, Optional } from '@angular/core';
import { Http as HttpAngular, BrowserXhr, ResponseOptions, XSRFStrategy, ConnectionBackend } from '@angular/http';
import { Http, xhrBackendFactory, Events, HttpEvents, HttpPluginsToken, Plugins, ParseResponsePlugin, ParseResponseToken, RequestDefaultOptionsToken, DefaultOptionsToken, ThrowExceptionStatus, ThrowExceptionStatusToken } from './providers';
export var HttpModule = (function () {
    function HttpModule(parentModule) {
        if (parentModule) {
            throw new Error('HttpModule already loaded; Import in root module only.');
        }
    }
    HttpModule.initialize = function (plugins, defaultRequest, defaultResponse) {
        return {
            ngModule: HttpModule,
            providers: [
                Events,
                HttpEvents,
                {
                    provide: ConnectionBackend,
                    useFactory: xhrBackendFactory,
                    deps: [BrowserXhr, ResponseOptions, XSRFStrategy, HttpEvents]
                },
                HttpAngular,
                { provide: ThrowExceptionStatusToken, useValue: null },
                { provide: ParseResponseToken, useClass: ThrowExceptionStatus, deps: [ThrowExceptionStatusToken], multi: true },
                { provide: Plugins, useClass: Plugins, deps: [HttpPluginsToken] },
                { provide: RequestDefaultOptionsToken, useValue: defaultRequest },
                { provide: DefaultOptionsToken, useValue: defaultResponse },
                Http,
                plugins
            ]
        };
    };
    HttpModule.decorators = [
        { type: NgModule },
    ];
    HttpModule.ctorParameters = [
        { type: HttpModule, decorators: [{ type: Optional }, { type: SkipSelf },] },
    ];
    return HttpModule;
}());
export var DefaultPlugins = [
    {
        provide: HttpPluginsToken,
        useClass: ParseResponsePlugin,
        deps: [ParseResponseToken],
        multi: true
    }
];
//# sourceMappingURL=module.js.map