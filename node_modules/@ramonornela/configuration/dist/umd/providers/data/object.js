var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports", '@angular/core', '../config-base'], factory);
    }
})(function (require, exports) {
    "use strict";
    var core_1 = require('@angular/core');
    var config_base_1 = require('../config-base');
    var ObjectData = (function (_super) {
        __extends(ObjectData, _super);
        function ObjectData(data, env) {
            _super.call(this, env, data);
        }
        ObjectData.prototype.getData = function (data) {
            if (data === null || Array.isArray(data)) {
                throw new Error('Data type config invalid');
            }
            if (Object.keys(data).length === 0) {
                throw new Error('Config is required');
            }
            return data;
        };
        ObjectData.decorators = [
            { type: core_1.Injectable },
        ];
        ObjectData.ctorParameters = [
            { type: Object, },
            null,
        ];
        return ObjectData;
    }(config_base_1.ConfigBase));
    exports.ObjectData = ObjectData;
});
//# sourceMappingURL=object.js.map