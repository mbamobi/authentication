import { ObjectData } from './data/object';
import { JsonData } from './data/json';
export function dataFactory(config, env) {
    return new ObjectData(config, env);
}
export function jsonFactory(config, xhr, env) {
    return new JsonData(config, xhr, env);
}
export function loaderFactory(config, xhr, env, customLoader) {
    switch (true) {
        case typeof config === 'object':
            return dataFactory(config, env);
        case typeof config === 'string' && (config.indexOf('.json') !== -1 || config.indexOf('http') !== -1):
            return jsonFactory(config, xhr, env);
        case typeof customLoader === 'function':
            return customLoader.apply(null, [config, env]);
        default:
            throw new Error('Invalid configuration');
    }
}
//# sourceMappingURL=factory.js.map