import { OpaqueToken } from '@angular/core';
import { HTTP_METHODS, Params } from './data-type';
import { Metadata } from './metadata';
import { Config } from '@ramonornela/configuration';
export declare const ConfigRoutesToken: OpaqueToken;
export declare class MetadataBase implements Metadata {
    protected data: any;
    constructor(config: Config, configData: Object);
    protected _set(id: string, key: string, value: any): void;
    protected _add(id: string, key: string, value: any): void;
    protected _get(id: string, key: string, merge: boolean): any;
    get(id: string): any;
    has(id: string): boolean;
    setMethod(id: string, method: string): this;
    getMethod(id: string): HTTP_METHODS;
    setUrl(id: string, url: string): this;
    getUrl(id: string): string;
    setParams(id: string, params: Array<{
        [name: string]: Params;
    }>): this;
    addParam(id: string, param: {
        [name: string]: Params;
    }): this;
    getParams(id: string): {
        [name: string]: Params;
    };
    setHeaders(id: string, headers: Array<{
        [name: string]: Params;
    }>): this;
    addHeader(id: string, header: {
        [name: string]: Params;
    }): this;
    getHeaders(id?: string): {
        [key: string]: any;
    };
    protected mergeDefaults(data: Object, key: string): any;
    setDefaults(key: string, defaults: any): this;
    addDefaults(key: string, defaults: any): this;
    getDefaults(key: string): any;
}
